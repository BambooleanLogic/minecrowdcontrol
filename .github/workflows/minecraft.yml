name: Minecraft Mod CI

on: [push]

jobs:
  build:
    name: "Mod Build"
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Get Build Version
      id: getbuildversion
      run: echo "::set-output name=version::$(./gradlew --console=plain -q properties |grep ^version | cut -d':' -f2 | tr -d '[:space:]')"
    - name: Build with Gradle
      run: ./gradlew build
    - name: Get Build Filename
      id: getfilename
      run: echo "::set-output name=file::$(ls build/libs/minecrowdcontrol-*.jar)"
    - name: Upload build
      uses: actions/upload-artifact@v1
      with:
        name: "Minecraft Mod JAR file"
        path: ${{ steps.getfilename.outputs.file }}
    - name: Upload Crowd Control CS file
      uses: actions/upload-artifact@v1
      with:
        name: "Crowd Control Configuration"
        path: "minecrowdcontrol.cs"
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: build-${{ steps.getbuildversion.outputs.version }}
        release_name: Release ${{ github.ref }} (${{ steps.getbuildversion.outputs.version }})
        draft: false
        prerelease: false
    - name: Upload JAR
      id: upload-jar
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ${{ steps.getfilename.outputs.file }}
        asset_name: minecrowdcontrol.jar
        asset_content_type: application/zip
    - name: Upload CS File
      id: upload-cs-file
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: minecrowdcontrol.cs
        asset_name: minecrowdcontrol.cs
        asset_content_type: text/plains